name: update-chart-and-docs-on-dependency-change

on:
  pull_request:
    types: [opened, labeled, synchronize]

jobs: 
  bump-chart-version:
    name: Bump Chart Version
    if: contains(github.event.pull_request.labels.*.name, 'dependencies')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 2

      - name: Install yq for YAML processing
        run: |
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Process Chart version update
        id: version-update
        run: |
          # Check if appVersion changed in the latest commit
          if git diff HEAD^ HEAD -- charts/perses/Chart.yaml | grep -q '^[+-].*appVersion:'; then
            echo "appVersion change detected - updating Chart version"
            
            # Extract current version from Chart.yaml
            current_version=$(yq e '.version' charts/perses/Chart.yaml)
            echo "Current Chart version: $current_version"
            
            # Split version into components
            IFS='.' read -r major minor patch <<< "$current_version"
            
            # Increment minor version and reset patch
            new_version="${major}.$((minor + 1)).0"
            echo "New Chart version will be: $new_version"
            
            # Update version in Chart.yaml
            yq e ".version = \"$new_version\"" -i charts/perses/Chart.yaml
            echo "Successfully updated Chart.yaml version"
          else
            echo "No appVersion change detected - skipping version update"
          fi

  update-docs:
    name: Update Docs and Commit
    needs: [bump-chart-version]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 2

      - name: Setup Go development environment
        uses: ./.github/actions/setup_environment
        with:
          enable_go: true

      - name: Install mdox documentation tool
        run: go install github.com/bwplotka/mdox@latest

      - name: Generate documentation and assets
        run: make update-helm-readme

      - name: Commit and push changes
        run: |
          # Configure git user for commit
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # Check if there are changes to commit
          if [[ $(git status --porcelain) ]]; then
            # Stage all changes
            git add .

            # Commit and push
            git commit -m "chore: bump chart version and update generated files"
            git push origin "${{ github.event.pull_request.head.ref }}"
          else
            echo "No changes to commit"
          fi
